name: Build Desktop Applications

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: redzone-${{ matrix.os }}
        path: dist/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release assets
      run: |
        mkdir -p release-assets
        find artifacts -name "*.exe" -exec cp {} release-assets/ \;
        find artifacts -name "*.dmg" -exec cp {} release-assets/ \;
        find artifacts -name "*.AppImage" -exec cp {} release-assets/ \;
        find artifacts -name "*.deb" -exec cp {} release-assets/ \;
        find artifacts -name "*.rpm" -exec cp {} release-assets/ \;

    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: release-assets
        path: release-assets/
        retention-days: 90
